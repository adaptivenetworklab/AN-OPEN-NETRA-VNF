kubernetesType: Vanilla  #Vanilla for community kubernetes distribution else Openshift for Openshift

nfimage:   # image name either locally present or in a public/private repository
  repository: docker.io/oaisoftwarealliance/oai-gnb           ## dockerhub oaisoftwarealliance/oai-gnb  
  version: 2023.w49 # image tag or develop
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: "regcred"

serviceAccount:
  create: true
  annotations: {}
  name: "oai-cu-sa"

multus:
  defaultGateway: ""
  f1Interface:
    create: true
    IPadd: "172.21.16.92"
    Netmask: "22"
    hostInterface: "ens33"      
  n2Interface:
    create: true
    IPadd: "172.21.6.90"
    Netmask: "22"
    hostInterface: "ens33"     
  n3Interface:
    create: true
    IPadd: "172.21.8.91"
    Netmask: "22"
    hostInterface: "ens33"     

config:
  mountConfig: true         #If config file is mounted then please edit mount.conf in configmap.yaml properly 
  timeZone: "Asia/Jakarta"
  useAdditionalOptions: "--sa --log_config.global_log_options level,nocolor,time"
  cuName: "oai-cu-2"
  mcc: "001"   # check the information with AMF, SMF, UPF
  mnc: "01"    # check the information with AMF, SMF, UPF
  tac: "0x0001"     # check the information with AMF
  sst: "1"  #currently only 4 standard values are allowed 1,2,3,4
  amfhost: "10.233.71.10"  # amf ip-address or service-name oai-amf-svc or 172.21.6.94
  n2IfName: "eth0"    # if multus.n2Interface.create is true then use n2
  n3IfName: "eth0"   #if multus.n3Interface.create is true then use n3 or you can only use 1 interface n2 or eth0 
  f1IfName: "eth0"   #if multus.f1Interface.create is true then use multus.f1Interface.Ipadd
  f1cuPort: "2152"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
  f1duPort: "2152"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

start:
  gnbcu: true
  tcpdump: false

includeTcpDumpContainer: false 

tcpdumpimage:
   repository: docker.io/corfr/tcpdump
   version: latest
   pullPolicy: IfNotPresent

resources:
  define: false
  limits:
    nf:
      cpu: 100m
      memory: 128Mi
    tcpdump:
      cpu: 100m
      memory: 128Mi
  requests:
    nf:
      cpu: 100m
      memory: 128Mi
    tcpdump:
      cpu: 100m
      memory: 128Mi


tolerations: []

affinity: {}

terminationGracePeriodSeconds: 5

nodeSelector: {}

nodeName: 
